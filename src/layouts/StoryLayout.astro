---
import { name, directory, calendarScriptName, imageProtection } from '@settings';
import Layout from '@layouts/Layout.astro';
import Glossary from '@components/Glossary.astro';
import CalendarButton from '@components/CalendarButton.astro';
import ImportHTML from '@components/ImportHTML.astro';
import CastModalHandlebars from '@templates/cast-modal-handlebars.html?raw';
const castModalHandlebars = CastModalHandlebars.replace(':::protect:::', imageProtection ? 'class="protect" ' : '');

const { episode, onairDate, calendarBtn } = Astro.props;
const title = `第${episode}話｜ストーリー｜${name}｜テレビ朝日`;
const pegeDescription = `テレビ朝日『${name}』番組サイト「ストーリー」ページ。${onairDate}放送【第${episode}話】あらすじ。`;
---
<Layout title={title} pegeDescription={pegeDescription}>
  <section class="story__container section__container">
    <h2 class="typ__h2" data-label="ストーリー">STORY</h2>
    <div class="story__items__container section__items__container">

      <slot />

      { calendarBtn && <CalendarButton html={`/${directory}/story/parts/calendar-btn.html`} name={calendarScriptName} /> }

      <h2 class="h2-ttl-inner" data-label="バックナンバー">BACKNUMBER</h2>
      <ImportHTML html={`/${directory}/story/parts/story-list.html`} class="backnumber__items" />
    </div>
  </section>
  <Glossary json={`/${directory}/api/cast.json`} />
  <script id="cast-template" type="text/x-handlebars-template" set:html={castModalHandlebars}></script>
</Layout>

<script>
  (() => {
    const el = document.querySelector('.story__items__container iframe[data-src]');
    if (!el) return;

    const options = {
      threshold: 0,
    }
    const observer = new IntersectionObserver((entries) => {
      for(const e of entries) {
        if (e.isIntersecting === true) {
          const src = el.getAttribute('data-src')
          el.setAttribute('src', src);
          observer.unobserve(el);
        }
      }
    }, options);
    observer.observe(el);
  })();
</script>
