---
import '@styles/story-carousel.css';
---
<section class="story__carousel">
  <div class="story__carousel__viewport">
    <div class="story__carousel__container">
      <slot />
    </div>
  </div>

  <div class="story__carousel__thumbs">
    <div class="story__carousel__thumbs__viewport">
      <div class="story__carousel__thumbs__container"></div>
    </div>
  </div>
</section>

<script>
import EmblaCarousel from 'embla-carousel';
import Autoplay from 'embla-carousel-autoplay';
import AutoHeight from 'embla-carousel-auto-height';


const addThumbBtnsClickHandlers = (emblaApiMain, emblaApiThumb) => {
  const slidesThumbs = emblaApiThumb.slideNodes()

  const scrollToIndex = slidesThumbs.map(
    (_, index) => () => emblaApiMain.scrollTo(index)
  )

  slidesThumbs.forEach((slideNode, index) => {
    slideNode.addEventListener('click', scrollToIndex[index], false)
  })

  return () => {
    slidesThumbs.forEach((slideNode, index) => {
      slideNode.removeEventListener('click', scrollToIndex[index], false)
    })
  }
}

const addToggleThumbBtnsActive = (emblaApiMain, emblaApiThumb) => {
  const slidesThumbs = emblaApiThumb.slideNodes()

  const toggleThumbBtnsState = () => {
    emblaApiThumb.scrollTo(emblaApiMain.selectedScrollSnap())
    const previous = emblaApiMain.previousScrollSnap()
    const selected = emblaApiMain.selectedScrollSnap()
    slidesThumbs[previous].classList.remove('story__carousel__thumbs__slide--selected')
    slidesThumbs[selected].classList.add('story__carousel__thumbs__slide--selected')
  }

  emblaApiMain.on('select', toggleThumbBtnsState)
  emblaApiThumb.on('init', toggleThumbBtnsState)

  return () => {
    const selected = emblaApiMain.selectedScrollSnap()
    slidesThumbs[selected].classList.remove('story__carousel__thumbs__slide--selected')
  }
}

const OPTIONS = {}
const OPTIONS_THUMBS = {
  containScroll: 'keepSnaps',
  dragFree: true
}

const thumbItems = document.querySelector('.story__carousel__container').cloneNode(true);
const slideItems = thumbItems.querySelectorAll('.story__carousel__slide');
Array.from(slideItems).forEach((slideItem, i) => {
  if (i === 0) {
    return slideItem.className = 'story__carousel__thumbs__slide embla-thumbs__slide--selected';
  }
  return slideItem.className = 'story__carousel__thumbs__slide';
});
const slideThumbContainer = document.querySelector('.story__carousel__thumbs__container');
slideThumbContainer.style.setProperty('--_item-count', slideItems.length >= 5 ? 5 : slideItems.length);
slideThumbContainer.innerHTML = thumbItems.innerHTML;

const viewportNodeMainCarousel = document.querySelector('.story__carousel__viewport')
const viewportNodeThumbCarousel = document.querySelector('.story__carousel__thumbs__viewport')
const emblaApiMain = EmblaCarousel(viewportNodeMainCarousel, OPTIONS, [
    Autoplay({ delay: 4000 }),
    AutoHeight()
  ])
const emblaApiThumb = EmblaCarousel(viewportNodeThumbCarousel, OPTIONS_THUMBS)

const removeThumbBtnsClickHandlers = addThumbBtnsClickHandlers(
  emblaApiMain,
  emblaApiThumb
)
const removeToggleThumbBtnsActive = addToggleThumbBtnsActive(
  emblaApiMain,
  emblaApiThumb
)

emblaApiMain
  .on('destroy', removeThumbBtnsClickHandlers)
  .on('destroy', removeToggleThumbBtnsActive)

emblaApiThumb
  .on('destroy', removeThumbBtnsClickHandlers)
  .on('destroy', removeToggleThumbBtnsActive)




